"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[308],{6165:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=n(8040),o=n(5246);const a={sidebar_position:1,title:"Flusso di lavoro PR per la revisione del codice"},l=void 0,s={id:"contributing/code-review-pr-workflow",title:"Flusso di lavoro PR per la revisione del codice",description:"La revisione del codice tramite Pull Request (PR) \xe8 un aspetto importante dello sviluppo perch\xe9 \xe8 uno dei principali",source:"@site/i18n/it/docusaurus-plugin-content-docs/current/contributing/code-review-pr-workflow.md",sourceDirName:"contributing",slug:"/contributing/code-review-pr-workflow",permalink:"/it/docs/contributing/code-review-pr-workflow",draft:!1,unlisted:!1,editUrl:"https://github.com/QubitPi/Fiore/tree/master/docs/docs/contributing/code-review-pr-workflow.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Flusso di lavoro PR per la revisione del codice"},sidebar:"tutorialSidebar",previous:{title:"Configurazione",permalink:"/it/docs/configuration"},next:{title:"Guida di stile per la documentazione in Markdown",permalink:"/it/docs/contributing/markdown-documentation-style-guide"}},d={},c=[{value:"Cosa rende una PR buona?",id:"cosa-rende-una-pr-buona",level:2},{value:"Tipi di modifiche",id:"tipi-di-modifiche",level:3},{value:"Organizzazione delle modifiche",id:"organizzazione-delle-modifiche",level:3},{value:"Documentazione delle modifiche",id:"documentazione-delle-modifiche",level:3},{value:"Fasi",id:"fasi",level:2},{value:"Work in Progress (WIP)",id:"work-in-progress-wip",level:3},{value:"Reviewable",id:"reviewable",level:3},{value:"Mergeable",id:"mergeable",level:3},{value:"Merged*",id:"merged",level:3},{value:"Closed*",id:"closed",level:3},{value:"Flusso",id:"flusso",level:2},{value:"Flag",id:"flag",level:2},{value:"Breakfix",id:"breakfix",level:3},{value:"Breaking Change",id:"breaking-change",level:3},{value:"Need 2 Reviews",id:"need-2-reviews",level:3},{value:"Need 1 Review",id:"need-1-review",level:3},{value:"Need Changes",id:"need-changes",level:3},{value:"Need Rebase",id:"need-rebase",level:3},{value:"Need Squash",id:"need-squash",level:3}];function t(e){const i={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.p,{children:"La revisione del codice tramite Pull Request (PR) \xe8 un aspetto importante dello sviluppo perch\xe9 \xe8 uno dei principali\ncanali di comunicazione delle modifiche apportate al codice sorgente a tutti gli altri che ci lavorano. Determinare lo\nstato di una PR, tuttavia, non \xe8 sempre facile, soprattutto per le PR molto attive con molti commenti e discussioni.\nQuesto documento descrive come utilizziamo le etichette di GitHub per contrassegnare lo stato di una PR, rendendone\nfacile la verifica a colpo d'occhio. Descrive anche cosa rende una PR facile da revisionare (e pi\xf9 una PR \xe8 facile da\nrevisionare, pi\xf9 velocemente verr\xe0 integrata!)."}),"\n",(0,r.jsx)(i.h2,{id:"cosa-rende-una-pr-buona",children:"Cosa rende una PR buona?"}),"\n",(0,r.jsx)(i.p,{children:"Lo scopo della revisione del codice e dell'apertura di una richiesta di rilascio (PR) \xe8 duplice:"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsx)(i.li,{children:"Modificare Fiore, compito dell'autore delle modifiche"}),"\n",(0,r.jsx)(i.li,{children:"Garantire che le modifiche nella PR migliorino Fiore, compito dei revisori della PR"}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"tipi-di-modifiche",children:"Tipi di modifiche"}),"\n",(0,r.jsx)(i.p,{children:"I tipi di modifiche apportate a Fiore sono solitamente di pochi tipi principali:"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Cleanup"}),": queste rientrano in 3 categorie:"]}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsx)(i.li,{children:"Modifiche stilistiche che rendono il codice pi\xf9 facile da leggere e meglio allineato con il resto della base di\ncodice."}),"\n",(0,r.jsx)(i.li,{children:"Modifiche di refactoring che migliorano il codice riducendo le duplicazioni o ripulendo classi e astrazioni che\npotrebbero aver avuto troppe responsabilit\xe0."}),"\n",(0,r.jsx)(i.li,{children:"Modifiche per aggiungere o migliorare i test per coprire comportamenti non testati o renderli pi\xf9 chiari."}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Logiche"}),": queste sono modifiche che aggiungono funzionalit\xe0 e capacit\xe0 che Fiore non aveva prima, o forse cambiano\nil modo in cui funzionano funzionalit\xe0, capacit\xe0 e caratteristiche esistenti."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"organizzazione-delle-modifiche",children:"Organizzazione delle modifiche"}),"\n",(0,r.jsx)(i.p,{children:"Sebbene la maggior parte delle modifiche inviate siano modifiche logiche, le modifiche di pulizia sono molto benvenute.\nQuando si apportano modifiche di pulizia, tuttavia, seguire alcune piccole linee guida garantir\xe0 che le modifiche siano\nfacili da esaminare per i revisori delle PR:"}),"\n",(0,r.jsxs)(i.ol,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Le modifiche ",(0,r.jsx)(i.em,{children:"dovrebbero"})," migliorare il codice secondo le ",(0,r.jsx)(i.a,{href:"https://google.github.io/styleguide/javaguide.html",children:"buone linee guida di stile"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:["Le modifiche ",(0,r.jsx)(i.em,{children:"non dovrebbero"})," oscurare altre modifiche, in particolare quelle logiche."]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"\xc8 meglio avere le modifiche di pulizia come PR separate, o almeno come commit separati dai commit con modifiche\nlogiche. (PR separate sono fortemente preferite)"}),"\n",(0,r.jsx)(i.li,{children:"\xc8 meglio avere troppi commit piccoli che devono essere raggruppati piuttosto che troppi pochi commit grandi che\npresentano modifiche sovrapposte. I commit piccoli possono essere combinati pi\xf9 facilmente di quanto i commit\ngrandi possano essere divisi."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"documentazione-delle-modifiche",children:"Documentazione delle modifiche"}),"\n",(0,r.jsxs)(i.p,{children:["In alcuni casi, quali siano le modifiche e perch\xe9 vengano apportate sono evidenti, ma in molti casi non \xe8 chiaro quale\nsia lo spirito della modifica. Pertanto, per facilitare la comprensione da parte dei revisori di quali siano le\nmodifiche e perch\xe9 vengano apportate, si prega di descriverle nella descrizione della richiesta di pubblicazione. \xc8\ninoltre consigliabile rivedere le proprie richieste di pubblicazione e lasciare commenti ove le modifiche richiedano\nulteriori spiegazioni. Ricordate, ",(0,r.jsx)(i.em,{children:(0,r.jsx)(i.strong,{children:"\xe8 compito dell'autore semplificare la revisione delle modifiche per i revisori!"})})]}),"\n",(0,r.jsx)(i.h2,{id:"fasi",children:"Fasi"}),"\n",(0,r.jsx)(i.p,{children:"Quando una richiesta di pubblicazione passa dall'essere aperta all'essere unita o chiusa, attraversa diversi stati o\nfasi, fino a diventare chiusa o unita."}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"#work-in-progress-wip",children:"Work in Progress (WIP)"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"#reviewable",children:"Reviewable"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"#mergeable",children:"Mergeable"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"#merged",children:"Merged*"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"#closed",children:"Closed*"})}),"\n"]}),"\n",(0,r.jsx)("sub",{children:"* indica gli stati predefiniti di GitHub per le PR. "}),"\n",(0,r.jsx)(i.h3,{id:"work-in-progress-wip",children:"Work in Progress (WIP)"}),"\n",(0,r.jsx)(i.p,{children:"Le modifiche alla PR vengono apportate attivamente, spesso in risposta al feedback dei revisori o per consentire un\nfeedback su un lavoro parziale. Sentiti libero di revisionarlo, ma il codice non \xe8 considerato completo dall'autore e\nprobabilmente richieder\xe0 una nuova revisione una volta completato il lavoro in corso."}),"\n",(0,r.jsx)(i.h3,{id:"reviewable",children:"Reviewable"}),"\n",(0,r.jsx)(i.p,{children:"L'autore considera le modifiche complete e pronte per la revisione completa."}),"\n",(0,r.jsx)(i.h3,{id:"mergeable",children:"Mergeable"}),"\n",(0,r.jsxs)(i.p,{children:["Una volta che una PR ha superato questa serie di controlli, \xe8 unificabile ed \xe8 pronta per essere ",(0,r.jsx)(i.a,{href:"#merged",children:"Merged*"}),":"]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Le modifiche sono state approvate da almeno 2 revisori"}),"\n",(0,r.jsxs)(i.li,{children:["Le modifiche si basano sulla testa del branch ",(0,r.jsx)(i.code,{children:"master"})]}),"\n",(0,r.jsx)(i.li,{children:"I commit sono stati compressi in commit logici"}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"merged",children:"Merged*"}),"\n",(0,r.jsxs)(i.p,{children:["La PR \xe8 stata unita. Questo \xe8 uno stato predefinito della PR di GitHub e ",(0,r.jsx)(i.em,{children:"dovrebbe"})," coesistere con lo stato\n",(0,r.jsx)(i.a,{href:"#mergeable",children:"Mergeable"}),"."]}),"\n",(0,r.jsx)(i.h3,{id:"closed",children:"Closed*"}),"\n",(0,r.jsx)(i.p,{children:"Le modifiche non verranno unite e la PR non dovrebbe ricevere ulteriore attenzione. Le PR chiuse possono essere riaperte."}),"\n",(0,r.jsx)(i.h2,{id:"flusso",children:"Flusso"}),"\n",(0,r.jsx)(i.p,{children:"Sebbene non vi siano restrizioni sugli stati, poich\xe9 sono indicati solo da etichette, questa tabella descrive in\ndettaglio le transizioni di stato previste da una fase all'altra."}),"\n",(0,r.jsxs)(i.table,{children:[(0,r.jsx)(i.thead,{children:(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.th,{children:"Inizio"}),(0,r.jsx)(i.th,{children:"Fine"})]})}),(0,r.jsxs)(i.tbody,{children:[(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:"-"}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.a,{href:"#work-in-progress-wip",children:"Work in Progress"}),", ",(0,r.jsx)(i.a,{href:"#reviewable",children:"Reviewable"}),", ",(0,r.jsx)(i.a,{href:"#closed",children:"Closed*"})]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"#work-in-progress-wip",children:"Work in Progress"})}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.a,{href:"#reviewable",children:"Reviewable"}),", ",(0,r.jsx)(i.a,{href:"#closed",children:"Closed*"})]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"#reviewable",children:"Reviewable"})}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.a,{href:"#work-in-progress-wip",children:"Work in Progress"}),", ",(0,r.jsx)(i.a,{href:"#mergeable",children:"Mergeable"}),", ",(0,r.jsx)(i.a,{href:"#closed",children:"Closed*"})]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"#mergeable",children:"Mergeable"})}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.a,{href:"#merged",children:"Merged*"}),", ",(0,r.jsx)(i.a,{href:"#closed",children:"Closed*"})]})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"#merged",children:"Merged*"})}),(0,r.jsx)(i.td,{children:"-"})]}),(0,r.jsxs)(i.tr,{children:[(0,r.jsx)(i.td,{children:(0,r.jsx)(i.a,{href:"#closed",children:"Closed*"})}),(0,r.jsxs)(i.td,{children:[(0,r.jsx)(i.a,{href:"#work-in-progress-wip",children:"Work in Progress"}),", ",(0,r.jsx)(i.a,{href:"#reviewable",children:"Reviewable"})]})]})]})]}),"\n",(0,r.jsx)(i.h2,{id:"flag",children:"Flag"}),"\n",(0,r.jsxs)(i.p,{children:["A seconda delle modifiche, di ci\xf2 che \xe8 accaduto nel repository al di fuori della PR e della fase del processo in cui si\ntrova la PR, possono essere applicati diversi flag alla PR. Alcuni flag indicano aspetti delle modifiche, mentre altri\nindicano ci\xf2 che deve essere fatto ai commit o alle modifiche nella PR prima che questa possa essere considerata\n",(0,r.jsx)(i.a,{href:"#mergeable",children:"Mergeable"}),"."]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"#breakfix",children:"Breakfix"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"#breaking-change",children:"Breaking Change"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"#need-2-reviews",children:"Need 2 Reviews"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"#need-1-review",children:"Need 1 Review"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"#need-changes",children:"Need Changes"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"#need-rebase",children:"Need Rebase"})}),"\n",(0,r.jsx)(i.li,{children:(0,r.jsx)(i.a,{href:"#need-squash",children:"Need Squash"})}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"breakfix",children:"Breakfix"}),"\n",(0,r.jsxs)(i.p,{children:["Le modifiche nella PR sono urgentemente necessarie per correggere una release non funzionante. Le release non\nfunzionanti dovrebbero essere corrette il pi\xf9 rapidamente possibile, quindi alle PR ",(0,r.jsx)(i.code,{children:"Breakfix"})," dovrebbe essere data una\npriorit\xe0 maggiore rispetto alle altre PR."]}),"\n",(0,r.jsx)(i.h3,{id:"breaking-change",children:"Breaking Change"}),"\n",(0,r.jsx)(i.p,{children:"Le modifiche nella PR sono retrocompatibili con le API rivolte ai clienti. Queste API non sono attualmente documentate,\nma quando lo saranno, saranno linkate qui. Nel frattempo, l'elenco operativo delle API rivolte al cliente include:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsx)(i.li,{children:"Formati di risposta (inclusi gli header)"}),"\n",(0,r.jsx)(i.li,{children:"Formati di richiesta (inclusi URL, parametri della stringa di query e header)"}),"\n",(0,r.jsx)(i.li,{children:"Configurazione (inclusi nomi di propriet\xe0, classi helper e interfacce)"}),"\n",(0,r.jsx)(i.li,{children:"Query LLM (ad es. OpenAI)"}),"\n"]}),"\n",(0,r.jsx)(i.h3,{id:"need-2-reviews",children:"Need 2 Reviews"}),"\n",(0,r.jsxs)(i.p,{children:["Sono necessarie altre 2 approvazioni prima che la richiesta di pubblicazione possa essere considerata\n",(0,r.jsx)(i.a,{href:"#mergeable",children:"Mergeable"}),"."]}),"\n",(0,r.jsx)(i.h3,{id:"need-1-review",children:"Need 1 Review"}),"\n",(0,r.jsxs)(i.p,{children:["\xc8 necessaria un'altra approvazione prima che la richiesta di pubblicazione possa essere considerata\n",(0,r.jsx)(i.a,{href:"#mergeable",children:"Mergeable"}),"."]}),"\n",(0,r.jsx)(i.h3,{id:"need-changes",children:"Need Changes"}),"\n",(0,r.jsx)(i.p,{children:"I revisori della richiesta di pubblicazione ritengono che siano ancora necessarie modifiche prima di poterla approvare.\nQualsiasi revisore che richieda modifiche in un commento deve assicurarsi che questo tag venga applicato alla richiesta\ndi pubblicazione e l'autore della richiesta di pubblicazione deve rimuoverlo quando ritiene di aver apportato tutte le\nmodifiche necessarie."}),"\n",(0,r.jsx)(i.h3,{id:"need-rebase",children:"Need Rebase"}),"\n",(0,r.jsxs)(i.p,{children:["Le modifiche devono essere rebase sul ramo principale del ramo ",(0,r.jsx)(i.code,{children:"master"})," prima che la PR possa essere considerata\n",(0,r.jsx)(i.a,{href:"#mergeable",children:"Mergeable"}),"."]}),"\n",(0,r.jsx)(i.h3,{id:"need-squash",children:"Need Squash"}),"\n",(0,r.jsxs)(i.p,{children:["Le modifiche devono essere compresse in commit logici prima che la PR possa essere considerata ",(0,r.jsx)(i.a,{href:"#mergeable",children:"Mergeable"}),"."]}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Nota: una PR che non ha ottenuto le due approvazioni necessarie non deve essere compressa."})," Tutti i commit effettuati\nin risposta ai commenti di revisione devono essere lasciati sul ramo fino al completamento della revisione, in modo che\nsia facile per i revisori tenere traccia delle modifiche apportate in risposta ai loro commenti."]})]})}function h(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(t,{...e})}):t(e)}},5246:(e,i,n)=>{n.d(i,{R:()=>l,x:()=>s});var r=n(2340);const o={},a=r.createContext(o);function l(e){const i=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),r.createElement(a.Provider,{value:i},e.children)}}}]);